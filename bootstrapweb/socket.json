{
    "content": {
      "title": "Socket",
      "description": "Il termine \"Socket\" si riferisce al punto di comunicazione tra due processi in una rete. È utilizzato nelle comunicazioni TCP/IP.",
      "index": {
        "title": "Indice",
        "items": [
          {
            "text": "Introduzione",
            "link": "#intro"
          },
          {
            "text": "Rappresentazione del Socket",
            "link": "#representation"
          },
          {
            "text": "Tipi principali di Socket",
            "link": "#types"
          },
          {
            "text": "Flusso di lavoro",
            "link": "#workflow"
          }
        ]
      },
      "sections": [
        {
          "title": "Introduzione",
          "content": [
            "Il Socket è un metodo di comunicazione che è stato inizialmente utilizzato nel sistema operativo <a href=\"glossario.html#unix\" data-bs-toggle=\"tooltip\" title=\"Sistema operativo che gestisce file e operazioni di rete.\">UNIX</a>. In UNIX, tutte le operazioni vengono trattate come file, quindi anche la comunicazione tramite Socket si basa su operazioni sui file. Sia il <a href=\"glossario.html#client\" data-bs-toggle=\"tooltip\" title=\"Richiedente del servizio.\">client</a> che il <a href=\"glossario.html#server\" data-bs-toggle=\"tooltip\" title=\"Fornitore di servizio.\">server</a> aprono un file, leggono o scrivono dati, e poi chiudono il file per scambiarsi informazioni e completare la comunicazione.",
            "Il Socket è la base della comunicazione di rete ed è un'unità fondamentale per il funzionamento dei protocolli TCP/IP. Può essere visto come un \"punto\" di comunicazione tra i <a href=\"glossario.html#processo\" data-bs-toggle=\"tooltip\" title=\"Processo in esecuzione che può comunicare tramite socket.\">processi</a> che si trovano su computer diversi, ed è l'interfaccia che i programmi usano per comunicare tra loro in una rete. I socket operano all'interno di un \"dominio di comunicazione\", che è un concetto usato per gestire la comunicazione tra diversi <a href=\"glossario.html#processo\" data-bs-toggle=\"tooltip\" title=\"Programmi o processi che interagiscono tra loro.\">processi</a>. I vari <a href=\"glossario.html#processo\" data-bs-toggle=\"tooltip\" title=\"Programmi che interagiscono tra loro.\">processi</a> utilizzano questo dominio comune per scambiare dati attraverso i protocolli Internet."
          ]
        },
        {
          "title": "Rappresentazione del Socket",
          "content": [
            "Un socket include due componenti: l'<a href=\"glossario.html#ip\" data-bs-toggle=\"tooltip\" title=\"Indirizzo unico assegnato a un dispositivo in una rete.\">indirizzo IP</a> e il <a href=\"glossario.html#porta\" data-bs-toggle=\"tooltip\" title=\"Numero che identifica un'applicazione su un dispositivo di rete.\">numero di porta</a>. Ogni coppia di <a href=\"glossario.html#processo\" data-bs-toggle=\"tooltip\" title=\"Processo in esecuzione che invia o riceve dati.\">processi</a> in comunicazione utilizza un socket distinto. I socket sono utilizzati per differenziare la comunicazione tra <a href=\"glossario.html#processo\" data-bs-toggle=\"tooltip\" title=\"Programmi che comunicano tra loro.\">processi</a> distinti. I parametri principali di un socket sono: <a href=\"glossario.html#ip\" data-bs-toggle=\"tooltip\" title=\"Indirizzo unico di un dispositivo in rete.\">indirizzo IP</a> del destinatario, protocollo di trasporto utilizzato e <a href=\"glossario.html#porta\" data-bs-toggle=\"tooltip\" title=\"Numero identificativo per l'applicazione sulla rete.\">numero di porta</a> del protocollo di trasporto.",
            "La rappresentazione di un socket è nel formato \"Indirizzo IP: Numero di Porta\". Ad esempio, se l'indirizzo IP è 210.37.145.1 e la porta è 23, il socket sarà rappresentato come (210.37.145.1:23)."
          ]
        },
        {
          "title": "Tipi principali di Socket",
          "content": [
            "Nel livello di trasporto dei protocolli di rete, i socket possono essere suddivisi in tre principali tipi:",
            "<ul><li><strong>Socket di flusso (SOCK_STREAM):</strong> I socket di flusso forniscono un servizio di trasmissione dati affidabile, orientato alla connessione. Garantisce che i dati vengano trasmessi senza errori, senza ripetizioni e nell'ordine corretto. I socket di flusso sono basati sul <a href=\"glossario.html#tcp\" data-bs-toggle=\"tooltip\" title=\"Protocollo orientato connessione.\">protocollo TCP</a> (Transmission Control Protocol).</li>",
            "<li><strong>Socket di datagramma (SOCK_DGRAM):</strong> I socket di datagramma forniscono un servizio senza connessione e non affidabile. Non garantiscono che i dati vengano trasmessi correttamente, quindi i dati potrebbero perdersi o essere duplicati. I socket di datagramma utilizzano il <a href=\"glossario.html#udp\" data-bs-toggle=\"tooltip\" title=\"Protocollo senza connessione.\">protocollo UDP</a> (User Datagram Protocol) per la trasmissione dei dati.</li>",
            "<li><strong>Socket raw (SOCK_RAW):</strong> I socket raw permettono di leggere e scrivere pacchetti IP che non sono stati processati dal kernel. A differenza dei socket di flusso e di datagramma, che leggono solo i dati TCP e UDP, i socket raw consentono di lavorare con altri protocolli di rete. Questi socket sono utilizzati per sviluppare protocolli o per operazioni di basso livello.</li></ul>"
          ]
        },
        {
          "title": "Flusso di lavoro",
          "content": [
            "Per la comunicazione attraverso Internet, almeno una coppia di socket è necessaria: uno sul <a href=\"glossario.html#client\" data-bs-toggle=\"tooltip\" title=\"Processo che invia richieste e riceve risposte.\">client</a> (Client Socket) e l'altro sul <a href=\"glossario.html#server\" data-bs-toggle=\"tooltip\" title=\"Processo che fornisce risposte alle richieste.\">server</a> (Server Socket). Il processo di connessione tra i socket può essere suddiviso in tre fasi:",
            "<ul><li><strong>Ascolto del server:</strong> Il server rimane in ascolto su un socket, senza destinazione specifica, in attesa di richieste di connessione da parte dei <a href=\"glossario.html#client\" data-bs-toggle=\"tooltip\" title=\"Processo che invia richieste di connessione.\">client</a>.</li>",
            "<li><strong>Richiesta del client:</strong> Il client invia una richiesta di connessione al server, specificando l'indirizzo del server e il numero di porta.</li>",
            "<li><strong>Conferma della connessione:</strong> Quando il server riceve la richiesta, stabilisce una connessione e risponde al client, confermando la connessione. Nel frattempo, il server continua ad ascoltare altre richieste di connessione.</li></ul>"
          ]
        }
      ]
    }
  }
  